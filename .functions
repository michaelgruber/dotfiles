#!/usr/bin/env bash

grepl() {
  if [[ "$1" == '-k' ]]; then
    local killing='true'
    shift
  fi

  local processes=$(ps -e | grep "$@" | grep -v grep)

  if [[ -z $processes ]]; then
    echo "No processes matching $@." >&2
    return
  fi

  if [[ "$killing" == 'true' ]]; then
    hit_list=$(echo "$processes" | awk '{print $1}' )
    echo "$hit_list" | xargs kill -9
    echo 'KILLED:'
  else
    echo 'PROCESSES:'
  fi

  echo "$processes" | awk '{ if ($5) { print $1, $5 } else { print $1, $4 } }'
}

jfmt() {
  local tmpfile=$(mktemp)
  jq . -r -M -S $1 > $tmpfile
  cat $tmpfile > $1
  rm $tmpfile
}

dockerclean() {
  docker rm $(docker ps -a | grep Exited | awk '{print $1}')
  docker rmi $(docker images -q -f dangling=true)
  docker volume rm $(docker volume ls -qf dangling=true)
}

note() {
  local args="$@"
  local file_date=$(date "+%Y-%m-%d")
  local meta_date=$(date "+%Y-%m-%d %T %z")
  local dir="$HOME/Documents/Notes"
  local title=$(echo ${args// /-} | tr -cd '[[:alnum:]]-' | tr '[[:upper:]]' '[[:lower:]]')
  local file="$dir/$file_date-$title.md"

  mkdir -p "$dir"

  if [[ -f "$file" ]]; then
    echo "File already exists: $file"
    return 1
  fi

  cat <<- EOF > $file
		<!---
		date:  $meta_date
		title: $args
		-->

		# $args
	EOF

  $EDITOR $file
}

gitstarted() {
  if [ -d '.git' ]; then
    local cc=$(git rev-list --all --count)
    if [ $cc -gt 0 ]; then
      echo 'This dir is already gitstarted'
      return 1
    fi
  fi

  git init

  if [ -e .gitignore ]; then
    mv .gitignore .gitignore.bak
    touch .gitignore
    git add .gitignore
    mv .gitignore.bak .gitignore
  else
    touch .gitignore
    git add .gitignore
  fi

  git commit -m 'initial commit'
}

__dl_init() {
  if [ -z ${__dl_tool+x} ]; then
    if command -v curl >/dev/null 2>&1; then
      export __dl_tool='curl'
      export __dl_tool_silent='-s'
      export __dl_tool_output='-o'
      return 0
    fi

    if command -v wget >/dev/null 2>&1; then
      export __dl_tool='wget'
      export __dl_tool_silent='-q'
      export __dl_tool_output='-O'
      return 0
    fi

    return 1
  fi

  return 0
}

dl() {
  __dl_init
  local src=$1
  shift
  local flags="${__dl_tool_silent}"

  if [ $# -gt 0 ]; then
    flags="${flags} ${__dl_tool_output} ${src}"
    src=$1
  fi

  ${__dl_tool} ${flags} ${src}
}
